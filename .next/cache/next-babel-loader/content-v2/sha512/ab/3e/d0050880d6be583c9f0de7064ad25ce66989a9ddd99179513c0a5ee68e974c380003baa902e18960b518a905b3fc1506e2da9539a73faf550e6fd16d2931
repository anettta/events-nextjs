{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport async function getAllEvents() {\n  const response = await fetch(\"https://meetups-869d8-default-rtdb.firebaseio.com/meetups.json\");\n  const data = await response.json();\n  const events = [];\n\n  for (const key in data) {\n    events.push(_objectSpread({\n      id: key\n    }, data[key]));\n  }\n\n  return events;\n}\nexport async function getFeaturedEvents() {\n  const allEvents = await getAllEvents();\n  return allEvents.filter(event => event.isFeatured);\n}\nexport async function getFilteredEvents(dateFilter) {\n  const {\n    year,\n    month\n  } = dateFilter;\n  const allEvents = await getAllEvents();\n  let filteredEvents = allEvents.filter(event => {\n    const eventDate = new Date(event.date);\n    return eventDate.getFullYear() === year && eventDate.getMonth() === month - 1;\n  });\n  return filteredEvents;\n}\nexport async function getEventById(id) {\n  const allEvents = await getAllEvents();\n  return allEvents.find(event => event.id === id);\n}","map":{"version":3,"sources":["/Users/anyagapyuk/Desktop/events-nextjs/helpers/api-util.js"],"names":["getAllEvents","response","fetch","data","json","events","key","push","id","getFeaturedEvents","allEvents","filter","event","isFeatured","getFilteredEvents","dateFilter","year","month","filteredEvents","eventDate","Date","date","getFullYear","getMonth","getEventById","find"],"mappings":";;;;;;AAAA,OAAO,eAAeA,YAAf,GAA8B;AACnC,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gEAD0B,CAA5B;AAGA,QAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEA,QAAMC,MAAM,GAAG,EAAf;;AACA,OAAK,MAAMC,GAAX,IAAkBH,IAAlB,EAAwB;AACtBE,IAAAA,MAAM,CAACE,IAAP;AACEC,MAAAA,EAAE,EAAEF;AADN,OAEKH,IAAI,CAACG,GAAD,CAFT;AAID;;AACD,SAAOD,MAAP;AACD;AAED,OAAO,eAAeI,iBAAf,GAAmC;AACxC,QAAMC,SAAS,GAAG,MAAMV,YAAY,EAApC;AACA,SAAOU,SAAS,CAACC,MAAV,CAAkBC,KAAD,IAAWA,KAAK,CAACC,UAAlC,CAAP;AACD;AAED,OAAO,eAAeC,iBAAf,CAAiCC,UAAjC,EAA6C;AAClD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBF,UAAxB;AAEA,QAAML,SAAS,GAAG,MAAMV,YAAY,EAApC;AAEA,MAAIkB,cAAc,GAAGR,SAAS,CAACC,MAAV,CAAkBC,KAAD,IAAW;AAC/C,UAAMO,SAAS,GAAG,IAAIC,IAAJ,CAASR,KAAK,CAACS,IAAf,CAAlB;AACA,WACEF,SAAS,CAACG,WAAV,OAA4BN,IAA5B,IAAoCG,SAAS,CAACI,QAAV,OAAyBN,KAAK,GAAG,CADvE;AAGD,GALoB,CAArB;AAOA,SAAOC,cAAP;AACD;AAED,OAAO,eAAeM,YAAf,CAA4BhB,EAA5B,EAAgC;AACrC,QAAME,SAAS,GAAG,MAAMV,YAAY,EAApC;AACA,SAAOU,SAAS,CAACe,IAAV,CAAgBb,KAAD,IAAWA,KAAK,CAACJ,EAAN,KAAaA,EAAvC,CAAP;AACD","sourcesContent":["export async function getAllEvents() {\n  const response = await fetch(\n    \"https://meetups-869d8-default-rtdb.firebaseio.com/meetups.json\"\n  );\n  const data = await response.json();\n\n  const events = [];\n  for (const key in data) {\n    events.push({\n      id: key,\n      ...data[key],\n    });\n  }\n  return events;\n}\n\nexport async function getFeaturedEvents() {\n  const allEvents = await getAllEvents();\n  return allEvents.filter((event) => event.isFeatured);\n}\n\nexport async function getFilteredEvents(dateFilter) {\n  const { year, month } = dateFilter;\n\n  const allEvents = await getAllEvents();\n\n  let filteredEvents = allEvents.filter((event) => {\n    const eventDate = new Date(event.date);\n    return (\n      eventDate.getFullYear() === year && eventDate.getMonth() === month - 1\n    );\n  });\n\n  return filteredEvents;\n}\n\nexport async function getEventById(id) {\n  const allEvents = await getAllEvents();\n  return allEvents.find((event) => event.id === id);\n}\n"]},"metadata":{},"sourceType":"module"}