{"ast":null,"code":"import _regeneratorRuntime from \"/Users/anyagapyuk/Desktop/events-nextjs/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"/Users/anyagapyuk/Desktop/events-nextjs/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/anyagapyuk/Desktop/events-nextjs/pages/events/index.js\";\nimport { useRouter } from \"next/router\";\nimport React, { Fragment } from \"react\";\nimport EventList from \"../../components/events/event-list\";\nimport EventsSearch from \"../../components/events/events-search\";\nimport { getAllEvents } from \"../../helpers/api-util\";\nexport default function AllEvents() {\n  return _AllEvents.apply(this, arguments);\n}\n_c2 = AllEvents;\n\nfunction _AllEvents() {\n  var _s = $RefreshSig$();\n\n  _AllEvents = _asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var events, router, findEventsHandler;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            findEventsHandler = function _findEventsHandler(year, month) {\n              var fullPath = \"/events/\".concat(year, \"/\").concat(month);\n              router.push(fullPath);\n            };\n\n            _s();\n\n            events = getAllEvents();\n            router = useRouter();\n            return _context.abrupt(\"return\", /*#__PURE__*/_jsxDEV(Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(EventsSearch, {\n                onSearch: findEventsHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 17,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(EventList, {\n                items: events\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 18,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 5\n            }, this));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }), \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n    return [useRouter];\n  }));\n  return _AllEvents.apply(this, arguments);\n}\n\n_c = AllEvents;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AllEvents\");\n$RefreshReg$(_c2, \"AllEvents\");","map":{"version":3,"sources":["/Users/anyagapyuk/Desktop/events-nextjs/pages/events/index.js"],"names":["useRouter","React","Fragment","EventList","EventsSearch","getAllEvents","AllEvents","findEventsHandler","year","month","fullPath","router","push","events"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,YAAT,QAA6B,wBAA7B;AAEA,wBAA8BC,SAA9B;AAAA;AAAA;MAA8BA,S;;;;;2EAAf;AAAA,wBAGJC,iBAHI;AAAA;AAAA;AAAA;AAAA;AAGJA,YAAAA,iBAHI,+BAGcC,IAHd,EAGoBC,KAHpB,EAG2B;AACtC,kBAAMC,QAAQ,qBAAcF,IAAd,cAAsBC,KAAtB,CAAd;AAEAE,cAAAA,MAAM,CAACC,IAAP,CAAYF,QAAZ;AACD,aAPY;;AAAA;;AACPG,YAAAA,MADO,GACER,YAAY,EADd;AAEPM,YAAAA,MAFO,GAEEX,SAAS,EAFX;AAAA,0DASX,QAAC,QAAD;AAAA,sCACE,QAAC,YAAD;AAAc,gBAAA,QAAQ,EAAEO;AAAxB;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAEM;AAAlB;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBATW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;YAEEb,S;;;;;KAFaM,S","sourcesContent":["import { useRouter } from \"next/router\";\nimport React, { Fragment } from \"react\";\nimport EventList from \"../../components/events/event-list\";\nimport EventsSearch from \"../../components/events/events-search\";\nimport { getAllEvents } from \"../../helpers/api-util\";\n\nexport default async function AllEvents() {\n  const events = getAllEvents();\n  const router = useRouter();\n  function findEventsHandler(year, month) {\n    const fullPath = `/events/${year}/${month}`;\n\n    router.push(fullPath);\n  }\n  return (\n    <Fragment>\n      <EventsSearch onSearch={findEventsHandler} />\n      <EventList items={events} />\n    </Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}